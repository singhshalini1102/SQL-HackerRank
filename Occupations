The PADS:
Generate the following two result sets:
Query an alphabetically ordered list of all names in OCCUPATIONS, immediately followed by the first letter of each profession as a parenthetical (i.e.: enclosed in parentheses). For example: AnActorName(A), ADoctorName(D), AProfessorName(P), and ASingerName(S).
Query the number of ocurrences of each occupation in OCCUPATIONS. Sort the occurrences in ascending order, and output them in the following format: 
There are a total of [occupation_count] [occupation]s.
where [occupation_count] is the number of occurrences of an occupation in OCCUPATIONS and [occupation] is the lowercase occupation name. If more than one Occupation has the same [occupation_count], they should be ordered alphabetically.

select concat(name, '(',substring(occupation,1,1),')') from occupations
order by name asc
select concat('There are a total of ', count(occupation),' ',lower(occupation),'s.') from occupations
group by occupation
order by count(occupation) asc, occupation asc


Occupations:
Pivot the Occupation column in OCCUPATIONS so that each Name is sorted alphabetically and displayed underneath its corresponding Occupation. The output column headers should be Doctor, Professor, Singer, and Actor, respectively.
Note: Print NULL when there are no more names corresponding to an occupation.

select min(Doctor), min(Professor),min(Singer),  min(Actor)
from(
select ROW_NUMBER() OVER(PARTITION By Doctor,Actor,Singer,Professor order by name asc) AS Rownum, 
case when Doctor=1 then name else Null end as Doctor,
case when Actor=1 then name else Null end as Actor,
case when Singer=1 then name else Null end as Singer,
case when Professor=1 then name else Null end as Professor
from occupations
pivot
( count(occupation)
for occupation in(Doctor, Actor, Singer, Professor)) as o
) temp
group by Rownum  ;


New Companies:
Amber's conglomerate corporation just acquired some new companies. Each of the companies follows this hierarchy: 
Given the table schemas below, write a query to print the company_code, founder name, total number of lead managers, total number of senior managers, total number of managers, and total number of employees. Order your output by ascending company_code.

select c.company_code, c.founder, count(distinct(lm.lead_manager_code)), count(distinct(sm.senior_manager_code)), count(distinct(m.manager_code)), count(distinct(e.employee_code)) from company c, lead_manager lm, senior_manager sm, manager m, employee e
where c.company_code=lm.company_code and lm.company_code=sm.company_code and sm.company_code=m.company_code and m.company_code=e.company_code
group by c.company_code, c.founder
order by c.company_code asc
