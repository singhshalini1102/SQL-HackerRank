Station 1:
Query a list of CITY and STATE from the STATION table.

SELECT CITY, STATE FROM STATION


Station 2:
Query the following two values from the STATION table:
The sum of all values in LAT_N rounded to a scale of 2 decimal places.
The sum of all values in LONG_W rounded to a scale of 2 decimal places.

select cast(round(sum(LAT_N),2) as decimal(10,2)), cast(round(sum(LONG_W),2) as decimal(10,2)) from station

Station 3:

Query a list of CITY names from STATION with even ID numbers only. You may print the results in any order, but must exclude duplicates from your answer.

SELECT DISTINCT CITY FROM STATION
WHERE ID%2 = 0


Station 4:

Let N be the number of CITY entries in STATION, and let N' be the number of distinct CITY names in STATION; query the value of N-N' from STATION. In other words, find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the table.

SELECT COUNT(CITY)-COUNT(DISTINCT CITY) FROM STATION


Station 5:

Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically.

SELECT top 1 CITY, LEN(CITY) FROM STATION ORDER BY LEN(CITY), CITY ASC
SELECT top 1 CITY, LEN(CITY) FROM STATION ORDER BY LEN(CITY) desc


Station 6:

Query the list of CITY names starting with vowels (i.e., a, e, i, o, or u) from STATION. Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION
WHERE CITY LIKE 'a%' or CITY LIKE 'e%' OR CITY LIKE 'i%' OR CITY LIKE 'o%' OR CITY LIKE 'u%'


Station 7:

Query the list of CITY names ending with vowels (a, e, i, o, u) from STATION. Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION
WHERE CITY LIKE '%a' or CITY LIKE '%e' OR CITY LIKE '%i' OR CITY LIKE '%o' OR CITY LIKE '%u'


Station 8:

Query the list of CITY names from STATION which have vowels (i.e., a, e, i, o, and u) as both their first and last characters. Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION
WHERE (CITY LIKE 'a%' or CITY LIKE 'e%' OR CITY LIKE 'i%' OR CITY LIKE 'o%' OR CITY LIKE 'u%') AND
(CITY LIKE '%a' or CITY LIKE '%e' OR CITY LIKE '%i' OR CITY LIKE '%o' OR CITY LIKE '%u')


Station 9:

Query the list of CITY names from STATION that do not start with vowels. Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION
WHERE SUBSTRING(CITY,1,1) NOT IN ('a','e','i','o','u')


Station 10:

Query the list of CITY names from STATION that do not end with vowels. Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION
WHERE SUBSTRING(CITY,LEN(CITY),1) NOT IN ('a','e','i','o','u')


Station 11:

Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION
WHERE SUBSTRING(CITY,1,1) NOT IN ('a','e','i','o','u') OR SUBSTRING(CITY,LEN(CITY),1) NOT IN ('a','e','i','o','u')


Station 12:

Query the list of CITY names from STATION that do not start with vowels and do not end with vowels. Your result cannot contain duplicates.

SELECT DISTINCT CITY FROM STATION
WHERE SUBSTRING(CITY,1,1) NOT IN ('a','e','i','o','u') AND SUBSTRING(CITY,LEN(CITY),1) NOT IN ('a','e','i','o','u')


Station 13:
Query the sum of Northern Latitudes (LAT_N) from STATION having values greater than 38.7880 and less than 137.2345. Truncate your answer to 4 decimal places.

select cast(round(sum(LAT_N),4) as decimal(10,4)) from station
where LAT_N>38.7880 and LAT_N<137.2345


Station 14:
Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.2345. Truncate your answer to 4 decimal places.

select top 1 cast(round(LAT_N,4) as decimal(10,4)) from station
where LAT_N<137.2345
order by LAT_N desc


Station 15:
Query the greatest value of the Western Longitude (LONG_W) from STATION that is less than 137.2345. Truncate your answer to 4 decimal places.

select top 1 cast(round(LONG_W,4) as decimal(10,4)) from station
where LAT_N<137.2345
order by LAT_N desc

Stayion 16:
Query the smallest Northern Latitude (LAT_N) from STATION that is greater than 38.7780. Round your answer to 4 decimal places.

select top 1 cast(round(LAT_N,4) as decimal(10,4)) from station
where LAT_N>38.7780
order by LAT_N asc


Station 17:
Query the smallest Western Longitude (LONG_W) from STATION that is greater than 38.7780. Round your answer to 4 decimal places.

select top 1 cast(round(LONG_W,4) as decimal(10,4)) from station
where LAT_N>38.7780
order by LAT_N asc


Station 18:
Consider P1(a,b) and P2(c,d) to be two points on a 2D plane.
a happens to equal the minimum value in Northern Latitude (LAT_N in STATION).
b happens to equal the minimum value in Western Longitude (LONG_W in STATION).
c happens to equal the maximum value in Northern Latitude (LAT_N in STATION).
d happens to equal the maximum value in Western Longitude (LONG_W in STATION).
Query the Manhattan Distance between points P1 and P2 and round it to a scale of 4 decimal places.

select cast(round((max(LAT_N)-min(LAT_N))+(max(LONG_W)-min(LONG_W)),4) as decimal(10,4)) from station
